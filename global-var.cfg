#!/usr/bin/env bash
#Date Modified
SRC="."  # Set SRC to the directory containing the script
CONF="./api.conf"
SCRIPTS="$(dirname "$0")/scripts"
UPDATED="28/02/2023"
hostname=$(hostname -s)
SERIAL=$(system_profiler SPHardwareDataType | sed '/^ *Serial Number (system):*/!d;s###;s/ //')
#RAM=$(system_profiler SPHardwareDataType | grep "Memory:")
OS=$(sw_vers -productVersion)
CPU=$(sysctl -n machdep.cpu.brand_string)
MAC=$(ifconfig en0 | grep ether | awk '{print $2}')
serial="$(ioreg -l | grep IOPlatformSerialNumber | sed -e 's/.*\"\(.*\)\"/\1/')"
uuid=$(system_profiler SPHardwareDataType | awk '/UUID/ {print $3}')
computername=$(networksetup -getcomputername)
CPU=$(sysctl -n machdep.cpu.brand_string)
#CPU=$(system_profiler SPHardwareDataType | grep "Processor Name:" | cut -d':' -f2)
RAM=$(system_profiler SPHardwareDataType | grep "Memory:" | cut -d':' -f2 | tr -d "[:space:]")
LOCAL_IP=$(osascript -e "IPv4 address of (system info)")
os=$(sw_vers -productName)
model=$(system_profiler SPHardwareDataType | grep "Model Identifier:" | cut -d':' -f2)
udid=$(system_profiler SPHardwareDataType | grep "Provisioning UDID:" | cut -d':' -f2)
screen=$(system_profiler SPDisplaysDataType | grep "Resolution:" | cut -d':' -f2)
hdd=$(system_profiler SPStorageDataType | grep "Capacity:" | cut -d':' -f2)


## Return City of Assets Public IP
GEODATA=$( curl -s http://ip-api.com/json/ )

read -r -d '' JXA <<EOF
function run() {
	var ipinfo = JSON.parse(\`$GEODATA\`);
	return ipinfo.city;
}
EOF

CITY=$(osascript -l JavaScript -e "$JXA")

NEXT_TAG="VGW3976"

NOTE="Updated by Reftab Agent"

#Reftab Loan Variables
LOANEE_EMAIL=""
